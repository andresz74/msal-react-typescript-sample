{"ast":null,"code":"/*! @azure/msal-common v7.4.0 2022-09-06 */\n'use strict';\n\nimport { SERVER_TELEM_CONSTANTS } from '../../utils/Constants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar ServerTelemetryEntity =\n/** @class */\nfunction () {\n  function ServerTelemetryEntity() {\n    this.failedRequests = [];\n    this.errors = [];\n    this.cacheHits = 0;\n  }\n  /**\r\n   * validates if a given cache entry is \"Telemetry\", parses <key,value>\r\n   * @param key\r\n   * @param entity\r\n   */\n\n\n  ServerTelemetryEntity.isServerTelemetryEntity = function (key, entity) {\n    var validateKey = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n    var validateEntity = true;\n\n    if (entity) {\n      validateEntity = entity.hasOwnProperty(\"failedRequests\") && entity.hasOwnProperty(\"errors\") && entity.hasOwnProperty(\"cacheHits\");\n    }\n\n    return validateKey && validateEntity;\n  };\n\n  return ServerTelemetryEntity;\n}();\n\nexport { ServerTelemetryEntity };","map":{"version":3,"mappings":";;;;AAAA;;;AAGG;;AAIH;AAAA;AAAA;EAKI;IACI,KAAKA,cAAL,GAAsB,EAAtB;IACA,KAAKC,MAAL,GAAc,EAAd;IACA,KAAKC,SAAL,GAAiB,CAAjB;EACH;EAED;;;;AAIG;;;EACIC,gDAAP,UAA+BC,GAA/B,EAA4CC,MAA5C,EAA2D;IAEvD,IAAMC,WAAW,GAAYF,GAAG,CAACG,OAAJ,CAAYC,sBAAsB,CAACC,SAAnC,MAAkD,CAA/E;IACA,IAAIC,cAAc,GAAY,IAA9B;;IAEA,IAAIL,MAAJ,EAAY;MACRK,cAAc,GACVL,MAAM,CAACM,cAAP,CAAsB,gBAAtB,KACAN,MAAM,CAACM,cAAP,CAAsB,QAAtB,CADA,IAEAN,MAAM,CAACM,cAAP,CAAsB,WAAtB,CAHJ;IAIH;;IAED,OAAOL,WAAW,IAAII,cAAtB;EACH,CAbM;;EAcX,OAACP,qBAAD;AAAC,CA9BD","names":["failedRequests","errors","cacheHits","ServerTelemetryEntity","key","entity","validateKey","indexOf","SERVER_TELEM_CONSTANTS","CACHE_KEY","validateEntity","hasOwnProperty"],"sources":["../../../src/cache/entities/ServerTelemetryEntity.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SERVER_TELEM_CONSTANTS } from \"../../utils/Constants\";\n\nexport class ServerTelemetryEntity {\n    failedRequests: Array<string|number>;\n    errors: string[];\n    cacheHits: number;\n\n    constructor() {\n        this.failedRequests = [];\n        this.errors = [];\n        this.cacheHits = 0;\n    }\n\n    /**\n     * validates if a given cache entry is \"Telemetry\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isServerTelemetryEntity(key: string, entity?: object): boolean {\n\n        const validateKey: boolean = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n        let validateEntity: boolean = true;\n\n        if (entity) {\n            validateEntity =\n                entity.hasOwnProperty(\"failedRequests\") &&\n                entity.hasOwnProperty(\"errors\") &&\n                entity.hasOwnProperty(\"cacheHits\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*! @azure/msal-browser v2.28.2 2022-09-06 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { InteractionRequiredAuthError, AuthError } from '@azure/msal-common';\nimport { BrowserAuthError } from './BrowserAuthError.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar NativeStatusCode;\n\n(function (NativeStatusCode) {\n  NativeStatusCode[\"USER_INTERACTION_REQUIRED\"] = \"USER_INTERACTION_REQUIRED\";\n  NativeStatusCode[\"USER_CANCEL\"] = \"USER_CANCEL\";\n  NativeStatusCode[\"NO_NETWORK\"] = \"NO_NETWORK\";\n  NativeStatusCode[\"TRANSIENT_ERROR\"] = \"TRANSIENT_ERROR\";\n  NativeStatusCode[\"PERSISTENT_ERROR\"] = \"PERSISTENT_ERROR\";\n  NativeStatusCode[\"DISABLED\"] = \"DISABLED\";\n  NativeStatusCode[\"ACCOUNT_UNAVAILABLE\"] = \"ACCOUNT_UNAVAILABLE\";\n})(NativeStatusCode || (NativeStatusCode = {}));\n\nvar NativeAuthErrorMessage = {\n  extensionError: {\n    code: \"ContentError\"\n  },\n  userSwitch: {\n    code: \"user_switch\",\n    desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n  },\n  tokensNotFoundInCache: {\n    code: \"tokens_not_found_in_internal_memory_cache\",\n    desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n  }\n};\n\nvar NativeAuthError =\n/** @class */\nfunction (_super) {\n  __extends(NativeAuthError, _super);\n\n  function NativeAuthError(errorCode, description, ext) {\n    var _this = _super.call(this, errorCode, description) || this;\n\n    Object.setPrototypeOf(_this, NativeAuthError.prototype);\n    _this.name = \"NativeAuthError\";\n    _this.ext = ext;\n    return _this;\n  }\n  /**\r\n   * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n   */\n\n\n  NativeAuthError.prototype.isFatal = function () {\n    if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n      return true;\n    }\n\n    switch (this.errorCode) {\n      case NativeAuthErrorMessage.extensionError.code:\n        return true;\n\n      default:\n        return false;\n    }\n  };\n  /**\r\n   * Create the appropriate error object based on the WAM status code.\r\n   * @param code\r\n   * @param description\r\n   * @param ext\r\n   * @returns\r\n   */\n\n\n  NativeAuthError.createError = function (code, description, ext) {\n    if (ext && ext.status) {\n      switch (ext.status) {\n        case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n          return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n\n        case NativeStatusCode.USER_INTERACTION_REQUIRED:\n          return new InteractionRequiredAuthError(code, description);\n\n        case NativeStatusCode.USER_CANCEL:\n          return BrowserAuthError.createUserCancelledError();\n\n        case NativeStatusCode.NO_NETWORK:\n          return BrowserAuthError.createNoNetworkConnectivityError();\n      }\n    }\n\n    return new NativeAuthError(code, description, ext);\n  };\n  /**\r\n   * Creates user switch error when the user chooses a different account in the native broker prompt\r\n   * @returns\r\n   */\n\n\n  NativeAuthError.createUserSwitchError = function () {\n    return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n  };\n  /**\r\n   * Creates a tokens not found error when the internal cache look up fails\r\n   * @returns NativeAuthError: tokensNotFoundInCache\r\n   */\n\n\n  NativeAuthError.createTokensNotFoundInCacheError = function () {\n    return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n  };\n\n  return NativeAuthError;\n}(AuthError);\n\nexport { NativeAuthError, NativeAuthErrorMessage, NativeStatusCode };","map":{"version":3,"mappings":";;;;;;AAAA;;;;;IAgBYA;;AAAZ,WAAYA,gBAAZ,EAA4B;EACxBA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;AACH,CARD,EAAYA,gBAAgB,KAAhBA,gBAAgB,MAA5B;;IAUaC,sBAAsB,GAAG;EAClCC,cAAc,EAAE;IACZC,IAAI,EAAE;EADM,CADkB;EAIlCC,UAAU,EAAE;IACRD,IAAI,EAAE,aADE;IAERE,IAAI,EAAE;EAFE,CAJsB;EAQlCC,qBAAqB,EAAE;IACnBH,IAAI,EAAE,2CADa;IAEnBE,IAAI,EAAE;EAFa;AARW;;;;;EAcDE;;EAGjC,yBAAYC,SAAZ,EAA+BC,WAA/B,EAAoDC,GAApD,EAAiE;IAAjE,YACIC,kBAAMH,SAAN,EAAiBC,WAAjB,KAA6B,IADjC;;IAGIG,MAAM,CAACC,cAAP,CAAsBC,KAAtB,EAA4BC,eAAe,CAACC,SAA5C;IACAF,KAAI,CAACG,IAAL,GAAY,iBAAZ;IACAH,KAAI,CAACJ,GAAL,GAAWA,GAAX;;EACH;;;;;;EAKDK;IACI,IAAI,KAAKL,GAAL,IAAY,KAAKA,GAAL,CAASQ,MAArB,KAAgC,KAAKR,GAAL,CAASQ,MAAT,KAAoBlB,gBAAgB,CAACmB,gBAArC,IAAyD,KAAKT,GAAL,CAASQ,MAAT,KAAoBlB,gBAAgB,CAACoB,QAA9H,CAAJ,EAA6I;MACzI,OAAO,IAAP;IACH;;IAED,QAAQ,KAAKZ,SAAb;MACI,KAAKP,sBAAsB,CAACC,cAAvB,CAAsCC,IAA3C;QACI,OAAO,IAAP;;MACJ;QACI,OAAO,KAAP;IAJR;EAMH,CAXD;;;;;;;;;;EAoBOY,8BAAP,UAAmBZ,IAAnB,EAAiCM,WAAjC,EAAsDC,GAAtD,EAAmE;IAC/D,IAAIA,GAAG,IAAIA,GAAG,CAACQ,MAAf,EAAuB;MACnB,QAAQR,GAAG,CAACQ,MAAZ;QACI,KAAKlB,gBAAgB,CAACqB,mBAAtB;UACI,OAAOC,4BAA4B,CAACC,mCAA7B,EAAP;;QACJ,KAAKvB,gBAAgB,CAACwB,yBAAtB;UACI,OAAO,IAAIF,4BAAJ,CAAiCnB,IAAjC,EAAuCM,WAAvC,CAAP;;QACJ,KAAKT,gBAAgB,CAACyB,WAAtB;UACI,OAAOC,gBAAgB,CAACC,wBAAjB,EAAP;;QACJ,KAAK3B,gBAAgB,CAAC4B,UAAtB;UACI,OAAOF,gBAAgB,CAACG,gCAAjB,EAAP;MARR;IAUH;;IAED,OAAO,IAAId,eAAJ,CAAoBZ,IAApB,EAA0BM,WAA1B,EAAuCC,GAAvC,CAAP;EACH,CAfM;;;;;;;EAqBAK,wCAAP;IACI,OAAO,IAAIA,eAAJ,CAAoBd,sBAAsB,CAACG,UAAvB,CAAkCD,IAAtD,EAA4DF,sBAAsB,CAACG,UAAvB,CAAkCC,IAA9F,CAAP;EACH,CAFM;;;;;;;EAQAU,mDAAP;IACI,OAAO,IAAIA,eAAJ,CAAoBd,sBAAsB,CAACK,qBAAvB,CAA6CH,IAAjE,EAAuEF,sBAAsB,CAACK,qBAAvB,CAA6CD,IAApH,CAAP;EACH,CAFM;;EAGX;AAlEA,EAAqCyB","names":["NativeStatusCode","NativeAuthErrorMessage","extensionError","code","userSwitch","desc","tokensNotFoundInCache","__extends","errorCode","description","ext","_super","Object","setPrototypeOf","_this","NativeAuthError","prototype","name","status","PERSISTENT_ERROR","DISABLED","ACCOUNT_UNAVAILABLE","InteractionRequiredAuthError","createNativeAccountUnavailableError","USER_INTERACTION_REQUIRED","USER_CANCEL","BrowserAuthError","createUserCancelledError","NO_NETWORK","createNoNetworkConnectivityError","AuthError"],"sources":["../../src/error/NativeAuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, InteractionRequiredAuthError } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"./BrowserAuthError\";\n\nexport type OSError = {\n    error: number;\n    protocol_error: string;\n    properties: object;\n    status: string;\n    retryable?: boolean;\n};\n\nexport enum NativeStatusCode {\n    USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\",\n    USER_CANCEL = \"USER_CANCEL\",\n    NO_NETWORK = \"NO_NETWORK\",\n    TRANSIENT_ERROR = \"TRANSIENT_ERROR\",\n    PERSISTENT_ERROR = \"PERSISTENT_ERROR\",\n    DISABLED = \"DISABLED\",\n    ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\"\n}\n\nexport const NativeAuthErrorMessage = {\n    extensionError: {\n        code: \"ContentError\"\n    },\n    userSwitch: {\n        code: \"user_switch\",\n        desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n    },\n    tokensNotFoundInCache: {\n        code: \"tokens_not_found_in_internal_memory_cache\",\n        desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n    }\n};\n\nexport class NativeAuthError extends AuthError {\n    ext: OSError | undefined;\n\n    constructor(errorCode: string, description: string, ext?: OSError) {\n        super(errorCode, description);\n\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n\n    /**\n     * These errors should result in a fallback to the 'standard' browser based auth flow.\n     */\n    isFatal(): boolean {\n        if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n            return true;\n        }\n\n        switch (this.errorCode) {\n            case NativeAuthErrorMessage.extensionError.code:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Create the appropriate error object based on the WAM status code.\n     * @param code\n     * @param description\n     * @param ext\n     * @returns\n     */\n    static createError(code: string, description: string, ext?: OSError): AuthError {\n        if (ext && ext.status) {\n            switch (ext.status) {\n                case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n                    return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n                case NativeStatusCode.USER_INTERACTION_REQUIRED:\n                    return new InteractionRequiredAuthError(code, description);\n                case NativeStatusCode.USER_CANCEL:\n                    return BrowserAuthError.createUserCancelledError();\n                case NativeStatusCode.NO_NETWORK:\n                    return BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n\n        return new NativeAuthError(code, description, ext);\n    }\n\n    /**\n     * Creates user switch error when the user chooses a different account in the native broker prompt\n     * @returns\n     */\n    static createUserSwitchError(): NativeAuthError {\n        return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n    }\n\n    /**\n     * Creates a tokens not found error when the internal cache look up fails\n     * @returns NativeAuthError: tokensNotFoundInCache\n     */\n    static createTokensNotFoundInCacheError(): NativeAuthError {\n        return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}